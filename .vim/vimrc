"""
""" Plugins
"""

" Enable plugins
if empty(glob('$HOME/.vim/autoload/plug.vim'))
  silent !curl -fLo $HOME/.vim/autoload/plug.vim --create-dirs
        \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

" Plugins
call plug#begin('~/.vim/plugged')

    " Status line
    Plug 'itchyny/lightline.vim'
    set laststatus=2
    set noshowmode

    " Color scheme
    Plug 'sonph/onehalf'

    " Indent lines
    Plug 'Yggdroot/indentLine'
    let g:indentLine_char_list = ['|', '¦', '┆', '┊']

    " Nerd tree
    Plug 'preservim/nerdtree'

    " Coding
    Plug 'kchmck/vim-coffee-script'

    " Nerd commenter
    Plug 'preservim/nerdcommenter'

call plug#end()


"""
""" Tmux
"""

" Fix tmux termguicolors
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set t_Co=256
set termguicolors

" Set cursor to line in insert mode
if exists('$TMUX')
  let &t_SI = "\<Esc>Ptmux;\<Esc>\e[5 q\<Esc>\\"
  let &t_EI = "\<Esc>Ptmux;\<Esc>\e[2 q\<Esc>\\"
else
  let &t_SI = "\e[5 q"
  let &t_EI = "\e[2 q"
endif

"""
""" Vim
"""

" Don't try to be vi compatible
set nocompatible

" Turn on syntax highlighting
syntax on

" For plugins to load correctly
filetype plugin indent on

" Show line numbers
set number

" Show file stats
set ruler

" Rendering
set ttyfast

" Show last command
set showcmd

" Set cursonline
set cursorline

" Enable visual autocomplete
set wildmenu

" Redraw less
set lazyredraw

" Bracket matching
set showmatch

" Incremental searching
set incsearch

" Highlight searching
set hlsearch

" Fix tabbing
set wrap
set textwidth=79
set formatoptions=tcqrn1
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set noshiftround
" 

" Move ~ files to /tmp
set backup
set backupdir=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set backupskip=/tmp/*,/private/tmp/*
set directory=~/.vim-tmp,~/.tmp,~/tmp,/var/tmp,/tmp
set writebackup

" Colorscheme
colorscheme onehalflight

"""
"""  Keymaps
"""

" Set Leader key
let mapleader = " "

" Normal binds
nnoremap <Enter>    o<ESC>
nnoremap <S-Enter>  O<ESC>
nnoremap gr         i <Esc>r
nnoremap <Tab>      i  <Esc>`^
nnoremap <leader>o  :NERDTreeToggle<CR>
nnoremap <leader>p  :set invnumber<CR>:IndentLineToggle<CR>

" Insert binds
inoremap jj         <Esc>
